—> For Ex1 (benchmark) : I kind of see a constant O(1) complexity for a set, 
and no real difference between vector and list…

mskoenz: the vector takes linear time for insert/erase and the list linear time for advance

mskoenz: code looks ok (one missing #include <algorithms>), but I'm missing plots


—> For Ex2 (Penna simulation) : I don’t really know how to implement the fact 
that even if an animal is not dead, it could die with a probability depending 
on the size of the population. The way I did it, the whole population dies if 
it reaches the max size… I adapted the parameters so the simulation doesn’t 
stop after just a few years.

mskoenz: That is fine, both approaches are ok (dynamic N in N_now/N_max and 
static N_before_dying/N_max)

And I just had another question : when a class uses libraries, should we 
include these libraries (#include <list> for example) in both the .hpp and .cpp 
file, or just the .hpp ? I know it doesn’t change anything, but it’s more for 
consistency…

mskoenz: Always in the cpp if it is possible, since the includes of your header 
will also be included in any project that uses your lib-header. But if you have 
list in the class as member, you have to have it in the header.
If you can include it in the cpp, we call it an implementation detail, 
else relevant for the interface (i.e. header)


to see only the comments (also later on), you can use:
git pull --tags     // will make sure that you get the tags from the server
git checkout ex7    // go back to my commit
git diff HEAD~1     // compare it with your commit (my commit - 1)
git checkout master // this brings you back to the future
